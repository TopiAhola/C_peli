Daily log:

Day 1: 24.5.2025
Daily 1. Start. Testing windows message box. Done.
Daily 2. Had to specify ANSI versions of functions... Will be problem in the future?


Day 2: 25.5.2025
Windows libraries have problems. Have to set the compiler up manually with bat file...
"undefined reference to `__imp_PatBlt' collect2.exe: error: ld returned 1 exit status"


Day 3: 26.5.2025
Figured out how to link libraries to the compiler. Also how to edit the powershell command in VSCode.
No progress with the code, but solving compiler problem was great.


Day 4: 27.6.2025
Daily 3 done. 
Learned #define
Bitmaps and backbuffer functions are complicated. No bugs?


Day 5: 28.6.2025
Created a bitmap draw function. Changed GetMessage to PeekMessage to allow 
program loop without messages. This seems to loop too fast.
Added a static variable to draw_test() instead. Works.


Day 6: 30.5.2025
Animation on resize works but not while looping... Daily 5 not started


Day 7: 2.6.2025
Animation during main program loop works :) Daily 5, change bitmap related functions to use a pointer instead of a global variable for bitmap.
resize_dib_section segfaults... Because pointer was null. (missing &variable) Works now!
Replaced GetClientRect() calls with get_window_dimensions()


Day 8: 3.6.2025
Gamepad input. Random macro-function-as-type-pointer-shit. Doesn't crash. Daily 6 half done.


Day 9: 4.6.2025
Daily 6 completed. draw_test() takes keyboard input to animate the bitmap.


Day 10: 5.6.2025
Directsound buffers set. Secondary buffer doesn't work. Maybe something to do with buffer size? Need to replace with XAudio anyway.


Day 11: 6.6.2025
Daily 8 was fun. Heap corruption error. Needs debugging.


Day 12: 8.6.2025
Daily 8 works. Error was passing a pointer insted of pointer to pointer to soundbuffer Lock().


Day 13: 9.6.2025
Sinewave sound works. Sound buffer was off by one.


Day 14: 10.6.2025
Daily 10 done. Wrote general performance counter functions. 
Maybe create a general benchmark class that lets me put measurement points wherever.
Has to allocate memory dynamically.


Day 15: 11.6.2025
Daily 11 done. First daily in setting up the build environment. Learned how messed c is with file names.


Day 16: 12.6.2025
Daily 12 done. Moved the sound function to platform agnostic game.cpp file. 
Attempt to quickly create a sound mixer failed but was't important.


Day 17: 16.6.2025
Daily 14 done. Daily 13 cannot be tested because the controller may be broken.
Learned to define variables in compiler arguments. Will start putting assert() functions in code.


Day 18: 18.6.2025
Windows CreateFile(), WriteFile, ReadFile() functions in Windows platform layer. 
Learned to NEVER use the proram files themselves as test read/writes after __FILE__ self reference
wiped a file with bad read function...


Day 19: 20.6.2025
Decided to stop versioning by naming files and rely on Git instead. Daily 16 done. KB input uses array with timestamps. Set up compiler launch settings for NUC and laptop. Windows keypress input is frustrating.


Day 20: 23.6.2025
Daily 17 done. Keyboard input feels quite good. Still need to get a gamepad to test that. Keyboard and pad input are normalized to same value. Bad sound function crashed the system. Next daily is to add frame rate limiter.


Day 21: 28.6.2025
Daily 18 done. Also modified keyboard input to make switching direction faster with arrow keys. Tested higher compiler warning level, seems useful but it doesn't understand Windows functions for example. Will need to disable some warnings or not use it constantly.


Day 22: 30.6.2025
Daily 19 done. Sound buffer write and read cursors are drawn on screen. Writes to sound buffer need to be changed from following the read cursor to running away from it as close as possible to reduce sound latency. Should the latency be set manually or determined automatically with a benchmark? 